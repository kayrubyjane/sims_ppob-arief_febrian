{"ast":null,"code":"import axios from\"axios\";import{baseUrl}from\"../../api\";import{GET_PROFILE,GET_PROFILE_SUCCESS,GET_PROFILE_FAILURE,LOGOUT,UPDATE_PROFILE,UPDATE_PROFILE_SUCCESS,UPDATE_PROFILE_FAILURE,UPDATE_PROFILE_IMAGE,UPDATE_PROFILE_IMAGE_SUCCESS,UPDATE_PROFILE_IMAGE_FAILURE,LOGIN,LOGIN_SUCCESS,LOGIN_FAILURE,FETCH_BALANCE,FETCH_BALANCE_SUCCESS,FETCH_BALANCE_FAILURE,REGISTER,REGISTER_SUCCESS,REGISTER_FAILURE}from\"./../types/actionTypes\";export const loginUser=(email,password)=>async dispatch=>{dispatch({type:LOGIN});try{const response=await axios.post(`${baseUrl}login`,{email,password});if(response.data.status===0){console.log(response.data.data.token);dispatch({type:LOGIN_SUCCESS,payload:response.data.data});}else{dispatch({type:LOGIN_FAILURE,error:response.data.message||\"Terjadi Kesalahan\"});}}catch(error){var _error$response,_error$response$data;const errorMessage=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||\"Terjadi Kesalahan\";dispatch({type:LOGIN_FAILURE,error:errorMessage});}};export const loadProfileAction=token=>async dispatch=>{dispatch({type:GET_PROFILE});try{const response=await axios.get(`${baseUrl}profile`,{headers:{Authorization:`Bearer ${token}`}});dispatch({type:GET_PROFILE_SUCCESS,payload:response.data.data});}catch(error){dispatch({type:GET_PROFILE_FAILURE,error:\"Failed to load profile data.\"});}};export const updateProfileAction=(firstName,lastName,token)=>async dispatch=>{dispatch({type:UPDATE_PROFILE});try{const response=await axios.put(`${baseUrl}profile/update`,{first_name:firstName,last_name:lastName},{headers:{Authorization:`Bearer ${token}`}});dispatch({type:UPDATE_PROFILE_SUCCESS,payload:response.data});}catch(error){dispatch({type:UPDATE_PROFILE_FAILURE,payload:error.message||\"Gagal memperbarui profil\"});throw new Error(error.message||\"Gagal memperbarui profil\");}finally{dispatch(loadProfileAction(token));}};export const updateProfileImageAction=(imageData,token)=>async dispatch=>{dispatch({type:UPDATE_PROFILE_IMAGE});try{await axios.put(`${baseUrl}profile/image`,imageData,{headers:{Authorization:`Bearer ${token}`,\"Content-Type\":\"multipart/form-data\"}});dispatch({type:UPDATE_PROFILE_IMAGE_SUCCESS});}catch(error){dispatch({type:UPDATE_PROFILE_IMAGE_FAILURE,error:\"Failed to update profile image.\"});}finally{dispatch(loadProfileAction(token));}};export const logoutAction=()=>{return{type:LOGOUT};};export const fetchBalanceAction=token=>async dispatch=>{dispatch({type:FETCH_BALANCE});try{const response=await axios.get(`${baseUrl}balance`,{headers:{Authorization:`Bearer ${token}`}});if(response.data.status===0){dispatch({type:FETCH_BALANCE_SUCCESS,payload:response.data.data.balance});}else{dispatch({type:FETCH_BALANCE_FAILURE,error:response.data.message||\"Failed to fetch balance.\"});}}catch(error){dispatch({type:FETCH_BALANCE_FAILURE,error:\"Terjadi kesalahan saat memuat saldo.\"});}};export const registerUserAction=(email,namaDepan,namaBelakang,password)=>async dispatch=>{dispatch({type:REGISTER});try{const response=await axios.post(`${baseUrl}registration`,{email,first_name:namaDepan,last_name:namaBelakang,password});if(response.data.status===0){dispatch({type:REGISTER_SUCCESS,payload:response.data.message});}else{dispatch({type:REGISTER_FAILURE,error:response.data.message||\"Terjadi Kesalahan\"});}}catch(error){var _error$response2,_error$response2$data;const errorMessage=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||\"Terjadi Kesalahan\";dispatch({type:REGISTER_FAILURE,error:errorMessage});}};","map":{"version":3,"names":["axios","baseUrl","GET_PROFILE","GET_PROFILE_SUCCESS","GET_PROFILE_FAILURE","LOGOUT","UPDATE_PROFILE","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_FAILURE","UPDATE_PROFILE_IMAGE","UPDATE_PROFILE_IMAGE_SUCCESS","UPDATE_PROFILE_IMAGE_FAILURE","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","FETCH_BALANCE","FETCH_BALANCE_SUCCESS","FETCH_BALANCE_FAILURE","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE","loginUser","email","password","dispatch","type","response","post","data","status","console","log","token","payload","error","message","_error$response","_error$response$data","errorMessage","loadProfileAction","get","headers","Authorization","updateProfileAction","firstName","lastName","put","first_name","last_name","Error","updateProfileImageAction","imageData","logoutAction","fetchBalanceAction","balance","registerUserAction","namaDepan","namaBelakang","_error$response2","_error$response2$data"],"sources":["C:/Users/arief/OneDrive/Documents/reactJS/sims_ppob-arief_febrian/src/redux/actions/authActions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { baseUrl } from \"../../api\";\r\nimport {\r\n     GET_PROFILE,\r\n     GET_PROFILE_SUCCESS,\r\n     GET_PROFILE_FAILURE,\r\n     LOGOUT,\r\n     UPDATE_PROFILE,\r\n     UPDATE_PROFILE_SUCCESS,\r\n     UPDATE_PROFILE_FAILURE,\r\n     UPDATE_PROFILE_IMAGE,\r\n     UPDATE_PROFILE_IMAGE_SUCCESS,\r\n     UPDATE_PROFILE_IMAGE_FAILURE,\r\n     LOGIN,\r\n     LOGIN_SUCCESS,\r\n     LOGIN_FAILURE,\r\n     FETCH_BALANCE,\r\n     FETCH_BALANCE_SUCCESS,\r\n     FETCH_BALANCE_FAILURE,\r\n     REGISTER,\r\n     REGISTER_SUCCESS,\r\n     REGISTER_FAILURE,\r\n} from \"./../types/actionTypes\";\r\n\r\nexport const loginUser = (email, password) => async (dispatch) => {\r\n     dispatch({ type: LOGIN });\r\n     try {\r\n          const response = await axios.post(`${baseUrl}login`, { email, password });\r\n\r\n          if (response.data.status === 0) {\r\n               console.log(response.data.data.token)\r\n               dispatch({ type: LOGIN_SUCCESS, payload: response.data.data });\r\n          } else {\r\n               dispatch({\r\n                    type: LOGIN_FAILURE,\r\n                    error: response.data.message || \"Terjadi Kesalahan\",\r\n               });\r\n          }\r\n     } catch (error) {\r\n          const errorMessage = error.response?.data?.message || \"Terjadi Kesalahan\";\r\n          dispatch({ type: LOGIN_FAILURE, error: errorMessage });\r\n     }\r\n};\r\n\r\nexport const loadProfileAction = (token) => async (dispatch) => {\r\n     dispatch({ type: GET_PROFILE });\r\n     try {\r\n          const response = await axios.get(`${baseUrl}profile`, {\r\n               headers: { Authorization: `Bearer ${token}` },\r\n          });\r\n          dispatch({\r\n               type: GET_PROFILE_SUCCESS,\r\n               payload: response.data.data,\r\n          });\r\n     } catch (error) {\r\n          dispatch({\r\n               type: GET_PROFILE_FAILURE,\r\n               error: \"Failed to load profile data.\",\r\n          });\r\n     }\r\n};\r\n\r\nexport const updateProfileAction = (firstName, lastName, token) => async (dispatch) => {\r\n     dispatch({ type: UPDATE_PROFILE })\r\n     try {\r\n          const response = await axios.put(\r\n               `${baseUrl}profile/update`,\r\n               { first_name: firstName, last_name: lastName },\r\n               { headers: { Authorization: `Bearer ${token}` } }\r\n          );\r\n\r\n          dispatch({\r\n               type: UPDATE_PROFILE_SUCCESS,\r\n               payload: response.data,\r\n          });\r\n     } catch (error) {\r\n          dispatch({\r\n               type: UPDATE_PROFILE_FAILURE,\r\n               payload: error.message || \"Gagal memperbarui profil\",\r\n          });\r\n          throw new Error(error.message || \"Gagal memperbarui profil\");\r\n     } finally {\r\n          dispatch(loadProfileAction(token));\r\n     }\r\n};\r\n\r\nexport const updateProfileImageAction = (imageData, token) => async (dispatch) => {\r\n     dispatch({ type: UPDATE_PROFILE_IMAGE });\r\n     try {\r\n          await axios.put(`${baseUrl}profile/image`, imageData, {\r\n               headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n               },\r\n          });\r\n          dispatch({\r\n               type: UPDATE_PROFILE_IMAGE_SUCCESS,\r\n          });\r\n     } catch (error) {\r\n          dispatch({\r\n               type: UPDATE_PROFILE_IMAGE_FAILURE,\r\n               error: \"Failed to update profile image.\",\r\n          });\r\n     } finally {\r\n          dispatch(loadProfileAction(token));\r\n     }\r\n};\r\n\r\nexport const logoutAction = () => {\r\n     return { type: LOGOUT };\r\n};\r\n\r\nexport const fetchBalanceAction = (token) => async (dispatch) => {\r\n     dispatch({ type: FETCH_BALANCE });\r\n     try {\r\n          const response = await axios.get(`${baseUrl}balance`, {\r\n               headers: { Authorization: `Bearer ${token}` },\r\n          });\r\n          if (response.data.status === 0) {\r\n               dispatch({\r\n                    type: FETCH_BALANCE_SUCCESS,\r\n                    payload: response.data.data.balance,\r\n               });\r\n          } else {\r\n               dispatch({\r\n                    type: FETCH_BALANCE_FAILURE,\r\n                    error: response.data.message || \"Failed to fetch balance.\",\r\n               });\r\n          }\r\n     } catch (error) {\r\n          dispatch({\r\n               type: FETCH_BALANCE_FAILURE,\r\n               error: \"Terjadi kesalahan saat memuat saldo.\",\r\n          });\r\n     }\r\n};\r\n\r\nexport const registerUserAction = (email, namaDepan, namaBelakang, password) => async (dispatch) => {\r\n     dispatch({ type: REGISTER });\r\n     try {\r\n          const response = await axios.post(`${baseUrl}registration`, {\r\n               email,\r\n               first_name: namaDepan,\r\n               last_name: namaBelakang,\r\n               password,\r\n          });\r\n\r\n          if (response.data.status === 0) {\r\n               dispatch({\r\n                    type: REGISTER_SUCCESS,\r\n                    payload: response.data.message,\r\n               });\r\n          } else {\r\n               dispatch({\r\n                    type: REGISTER_FAILURE,\r\n                    error: response.data.message || \"Terjadi Kesalahan\",\r\n               });\r\n          }\r\n     } catch (error) {\r\n          const errorMessage = error.response?.data?.message || \"Terjadi Kesalahan\";\r\n          dispatch({\r\n               type: REGISTER_FAILURE,\r\n               error: errorMessage,\r\n          });\r\n     }\r\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,OAAO,KAAQ,WAAW,CACnC,OACKC,WAAW,CACXC,mBAAmB,CACnBC,mBAAmB,CACnBC,MAAM,CACNC,cAAc,CACdC,sBAAsB,CACtBC,sBAAsB,CACtBC,oBAAoB,CACpBC,4BAA4B,CAC5BC,4BAA4B,CAC5BC,KAAK,CACLC,aAAa,CACbC,aAAa,CACbC,aAAa,CACbC,qBAAqB,CACrBC,qBAAqB,CACrBC,QAAQ,CACRC,gBAAgB,CAChBC,gBAAgB,KACd,wBAAwB,CAE/B,MAAO,MAAM,CAAAC,SAAS,CAAGA,CAACC,KAAK,CAAEC,QAAQ,GAAK,KAAO,CAAAC,QAAQ,EAAK,CAC7DA,QAAQ,CAAC,CAAEC,IAAI,CAAEb,KAAM,CAAC,CAAC,CACzB,GAAI,CACC,KAAM,CAAAc,QAAQ,CAAG,KAAM,CAAA1B,KAAK,CAAC2B,IAAI,CAAC,GAAG1B,OAAO,OAAO,CAAE,CAAEqB,KAAK,CAAEC,QAAS,CAAC,CAAC,CAEzE,GAAIG,QAAQ,CAACE,IAAI,CAACC,MAAM,GAAK,CAAC,CAAE,CAC3BC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACI,KAAK,CAAC,CACrCR,QAAQ,CAAC,CAAEC,IAAI,CAAEZ,aAAa,CAAEoB,OAAO,CAAEP,QAAQ,CAACE,IAAI,CAACA,IAAK,CAAC,CAAC,CACnE,CAAC,IAAM,CACFJ,QAAQ,CAAC,CACJC,IAAI,CAAEX,aAAa,CACnBoB,KAAK,CAAER,QAAQ,CAACE,IAAI,CAACO,OAAO,EAAI,mBACrC,CAAC,CAAC,CACP,CACL,CAAE,MAAOD,KAAK,CAAE,KAAAE,eAAA,CAAAC,oBAAA,CACX,KAAM,CAAAC,YAAY,CAAG,EAAAF,eAAA,CAAAF,KAAK,CAACR,QAAQ,UAAAU,eAAA,kBAAAC,oBAAA,CAAdD,eAAA,CAAgBR,IAAI,UAAAS,oBAAA,iBAApBA,oBAAA,CAAsBF,OAAO,GAAI,mBAAmB,CACzEX,QAAQ,CAAC,CAAEC,IAAI,CAAEX,aAAa,CAAEoB,KAAK,CAAEI,YAAa,CAAC,CAAC,CAC3D,CACL,CAAC,CAED,MAAO,MAAM,CAAAC,iBAAiB,CAAIP,KAAK,EAAK,KAAO,CAAAR,QAAQ,EAAK,CAC3DA,QAAQ,CAAC,CAAEC,IAAI,CAAEvB,WAAY,CAAC,CAAC,CAC/B,GAAI,CACC,KAAM,CAAAwB,QAAQ,CAAG,KAAM,CAAA1B,KAAK,CAACwC,GAAG,CAAC,GAAGvC,OAAO,SAAS,CAAE,CACjDwC,OAAO,CAAE,CAAEC,aAAa,CAAE,UAAUV,KAAK,EAAG,CACjD,CAAC,CAAC,CACFR,QAAQ,CAAC,CACJC,IAAI,CAAEtB,mBAAmB,CACzB8B,OAAO,CAAEP,QAAQ,CAACE,IAAI,CAACA,IAC5B,CAAC,CAAC,CACP,CAAE,MAAOM,KAAK,CAAE,CACXV,QAAQ,CAAC,CACJC,IAAI,CAAErB,mBAAmB,CACzB8B,KAAK,CAAE,8BACZ,CAAC,CAAC,CACP,CACL,CAAC,CAED,MAAO,MAAM,CAAAS,mBAAmB,CAAGA,CAACC,SAAS,CAAEC,QAAQ,CAAEb,KAAK,GAAK,KAAO,CAAAR,QAAQ,EAAK,CAClFA,QAAQ,CAAC,CAAEC,IAAI,CAAEnB,cAAe,CAAC,CAAC,CAClC,GAAI,CACC,KAAM,CAAAoB,QAAQ,CAAG,KAAM,CAAA1B,KAAK,CAAC8C,GAAG,CAC3B,GAAG7C,OAAO,gBAAgB,CAC1B,CAAE8C,UAAU,CAAEH,SAAS,CAAEI,SAAS,CAAEH,QAAS,CAAC,CAC9C,CAAEJ,OAAO,CAAE,CAAEC,aAAa,CAAE,UAAUV,KAAK,EAAG,CAAE,CACrD,CAAC,CAEDR,QAAQ,CAAC,CACJC,IAAI,CAAElB,sBAAsB,CAC5B0B,OAAO,CAAEP,QAAQ,CAACE,IACvB,CAAC,CAAC,CACP,CAAE,MAAOM,KAAK,CAAE,CACXV,QAAQ,CAAC,CACJC,IAAI,CAAEjB,sBAAsB,CAC5ByB,OAAO,CAAEC,KAAK,CAACC,OAAO,EAAI,0BAC/B,CAAC,CAAC,CACF,KAAM,IAAI,CAAAc,KAAK,CAACf,KAAK,CAACC,OAAO,EAAI,0BAA0B,CAAC,CACjE,CAAC,OAAS,CACLX,QAAQ,CAACe,iBAAiB,CAACP,KAAK,CAAC,CAAC,CACvC,CACL,CAAC,CAED,MAAO,MAAM,CAAAkB,wBAAwB,CAAGA,CAACC,SAAS,CAAEnB,KAAK,GAAK,KAAO,CAAAR,QAAQ,EAAK,CAC7EA,QAAQ,CAAC,CAAEC,IAAI,CAAEhB,oBAAqB,CAAC,CAAC,CACxC,GAAI,CACC,KAAM,CAAAT,KAAK,CAAC8C,GAAG,CAAC,GAAG7C,OAAO,eAAe,CAAEkD,SAAS,CAAE,CACjDV,OAAO,CAAE,CACJC,aAAa,CAAE,UAAUV,KAAK,EAAE,CAChC,cAAc,CAAE,qBACrB,CACL,CAAC,CAAC,CACFR,QAAQ,CAAC,CACJC,IAAI,CAAEf,4BACX,CAAC,CAAC,CACP,CAAE,MAAOwB,KAAK,CAAE,CACXV,QAAQ,CAAC,CACJC,IAAI,CAAEd,4BAA4B,CAClCuB,KAAK,CAAE,iCACZ,CAAC,CAAC,CACP,CAAC,OAAS,CACLV,QAAQ,CAACe,iBAAiB,CAACP,KAAK,CAAC,CAAC,CACvC,CACL,CAAC,CAED,MAAO,MAAM,CAAAoB,YAAY,CAAGA,CAAA,GAAM,CAC7B,MAAO,CAAE3B,IAAI,CAAEpB,MAAO,CAAC,CAC5B,CAAC,CAED,MAAO,MAAM,CAAAgD,kBAAkB,CAAIrB,KAAK,EAAK,KAAO,CAAAR,QAAQ,EAAK,CAC5DA,QAAQ,CAAC,CAAEC,IAAI,CAAEV,aAAc,CAAC,CAAC,CACjC,GAAI,CACC,KAAM,CAAAW,QAAQ,CAAG,KAAM,CAAA1B,KAAK,CAACwC,GAAG,CAAC,GAAGvC,OAAO,SAAS,CAAE,CACjDwC,OAAO,CAAE,CAAEC,aAAa,CAAE,UAAUV,KAAK,EAAG,CACjD,CAAC,CAAC,CACF,GAAIN,QAAQ,CAACE,IAAI,CAACC,MAAM,GAAK,CAAC,CAAE,CAC3BL,QAAQ,CAAC,CACJC,IAAI,CAAET,qBAAqB,CAC3BiB,OAAO,CAAEP,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC0B,OACjC,CAAC,CAAC,CACP,CAAC,IAAM,CACF9B,QAAQ,CAAC,CACJC,IAAI,CAAER,qBAAqB,CAC3BiB,KAAK,CAAER,QAAQ,CAACE,IAAI,CAACO,OAAO,EAAI,0BACrC,CAAC,CAAC,CACP,CACL,CAAE,MAAOD,KAAK,CAAE,CACXV,QAAQ,CAAC,CACJC,IAAI,CAAER,qBAAqB,CAC3BiB,KAAK,CAAE,sCACZ,CAAC,CAAC,CACP,CACL,CAAC,CAED,MAAO,MAAM,CAAAqB,kBAAkB,CAAGA,CAACjC,KAAK,CAAEkC,SAAS,CAAEC,YAAY,CAAElC,QAAQ,GAAK,KAAO,CAAAC,QAAQ,EAAK,CAC/FA,QAAQ,CAAC,CAAEC,IAAI,CAAEP,QAAS,CAAC,CAAC,CAC5B,GAAI,CACC,KAAM,CAAAQ,QAAQ,CAAG,KAAM,CAAA1B,KAAK,CAAC2B,IAAI,CAAC,GAAG1B,OAAO,cAAc,CAAE,CACvDqB,KAAK,CACLyB,UAAU,CAAES,SAAS,CACrBR,SAAS,CAAES,YAAY,CACvBlC,QACL,CAAC,CAAC,CAEF,GAAIG,QAAQ,CAACE,IAAI,CAACC,MAAM,GAAK,CAAC,CAAE,CAC3BL,QAAQ,CAAC,CACJC,IAAI,CAAEN,gBAAgB,CACtBc,OAAO,CAAEP,QAAQ,CAACE,IAAI,CAACO,OAC5B,CAAC,CAAC,CACP,CAAC,IAAM,CACFX,QAAQ,CAAC,CACJC,IAAI,CAAEL,gBAAgB,CACtBc,KAAK,CAAER,QAAQ,CAACE,IAAI,CAACO,OAAO,EAAI,mBACrC,CAAC,CAAC,CACP,CACL,CAAE,MAAOD,KAAK,CAAE,KAAAwB,gBAAA,CAAAC,qBAAA,CACX,KAAM,CAAArB,YAAY,CAAG,EAAAoB,gBAAA,CAAAxB,KAAK,CAACR,QAAQ,UAAAgC,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgB9B,IAAI,UAAA+B,qBAAA,iBAApBA,qBAAA,CAAsBxB,OAAO,GAAI,mBAAmB,CACzEX,QAAQ,CAAC,CACJC,IAAI,CAAEL,gBAAgB,CACtBc,KAAK,CAAEI,YACZ,CAAC,CAAC,CACP,CACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import axios from \"axios\";\nimport { TOPUP_REQUEST, TOPUP_SUCCESS, TOPUP_FAILURE } from \"../types/actionTypes\";\nimport { baseUrl } from \"../../api\";\nexport const topUpRequestAction = (amount, token) => async dispatch => {\n  dispatch({\n    type: TOPUP_REQUEST\n  });\n  try {\n    const response = await axios.post(`${baseUrl}topup`, {\n      top_up_amount: amount\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    if (response.data.status === 0) {\n      dispatch({\n        type: TOPUP_SUCCESS,\n        payload: response.data.message\n      });\n    } else {\n      dispatch({\n        type: TOPUP_FAILURE,\n        error: response.data.message || \"Terjadi Kesalahan\"\n      });\n    }\n  } catch (error) {\n    var _error$response, _error$response$data;\n    const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Terjadi Kesalahan\";\n    dispatch({\n      type: TOPUP_FAILURE,\n      error: errorMessage\n    });\n  }\n};","map":{"version":3,"names":["axios","TOPUP_REQUEST","TOPUP_SUCCESS","TOPUP_FAILURE","baseUrl","topUpRequestAction","amount","token","dispatch","type","response","post","top_up_amount","headers","Authorization","data","status","payload","message","error","_error$response","_error$response$data","errorMessage"],"sources":["C:/Users/arief/OneDrive/Documents/reactJS/sims_ppob-arief_febrian/src/redux/actions/topUpActions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { TOPUP_REQUEST, TOPUP_SUCCESS, TOPUP_FAILURE } from \"../types/actionTypes\";\r\nimport { baseUrl } from \"../../api\";\r\n\r\nexport const topUpRequestAction = (amount, token) => async (dispatch) => {\r\n     dispatch({ type: TOPUP_REQUEST });\r\n\r\n     try {\r\n          const response = await axios.post(\r\n               `${baseUrl}topup`,\r\n               { top_up_amount: amount },\r\n               { headers: { Authorization: `Bearer ${token}` } }\r\n          );\r\n\r\n          if (response.data.status === 0) {\r\n               dispatch({\r\n                    type: TOPUP_SUCCESS,\r\n                    payload: response.data.message,\r\n               });\r\n          } else {\r\n               dispatch({\r\n                    type: TOPUP_FAILURE,\r\n                    error: response.data.message || \"Terjadi Kesalahan\",\r\n               });\r\n          }\r\n     } catch (error) {\r\n          const errorMessage = error.response?.data?.message || \"Terjadi Kesalahan\";\r\n          dispatch({\r\n               type: TOPUP_FAILURE,\r\n               error: errorMessage,\r\n          });\r\n     }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,aAAa,EAAEC,aAAa,QAAQ,sBAAsB;AAClF,SAASC,OAAO,QAAQ,WAAW;AAEnC,OAAO,MAAMC,kBAAkB,GAAGA,CAACC,MAAM,EAAEC,KAAK,KAAK,MAAOC,QAAQ,IAAK;EACpEA,QAAQ,CAAC;IAAEC,IAAI,EAAER;EAAc,CAAC,CAAC;EAEjC,IAAI;IACC,MAAMS,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAC5B,GAAGP,OAAO,OAAO,EACjB;MAAEQ,aAAa,EAAEN;IAAO,CAAC,EACzB;MAAEO,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUP,KAAK;MAAG;IAAE,CACrD,CAAC;IAED,IAAIG,QAAQ,CAACK,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;MAC3BR,QAAQ,CAAC;QACJC,IAAI,EAAEP,aAAa;QACnBe,OAAO,EAAEP,QAAQ,CAACK,IAAI,CAACG;MAC5B,CAAC,CAAC;IACP,CAAC,MAAM;MACFV,QAAQ,CAAC;QACJC,IAAI,EAAEN,aAAa;QACnBgB,KAAK,EAAET,QAAQ,CAACK,IAAI,CAACG,OAAO,IAAI;MACrC,CAAC,CAAC;IACP;EACL,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACX,MAAMC,YAAY,GAAG,EAAAF,eAAA,GAAAD,KAAK,CAACT,QAAQ,cAAAU,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBL,IAAI,cAAAM,oBAAA,uBAApBA,oBAAA,CAAsBH,OAAO,KAAI,mBAAmB;IACzEV,QAAQ,CAAC;MACJC,IAAI,EAAEN,aAAa;MACnBgB,KAAK,EAAEG;IACZ,CAAC,CAAC;EACP;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arief\\\\OneDrive\\\\Documents\\\\reactJS\\\\sims_ppob-arief_febrian\\\\src\\\\pages\\\\LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { baseUrl } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const {\n    login\n  } = useContext(AuthContext);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const togglePassword = () => setShowPassword(!showPassword);\n  const onSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(`${baseUrl}login`, {\n        email,\n        password\n      }, {\n        withCredentials: true\n      });\n      if (response.data.success) {\n        login(response.data.token); // Simpan token ke context dan localStorage\n        navigate(\"/homePage\");\n      }\n    } catch (err) {\n      setError(\"Login gagal. Periksa email atau password Anda.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"/Xi/IdGhrLf4uue7+ibHrfE0mGo=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useContext","useState","AuthContext","axios","useNavigate","baseUrl","jsxDEV","_jsxDEV","LoginPage","_s","login","email","setEmail","password","setPassword","showPassword","setShowPassword","error","setError","navigate","togglePassword","onSubmit","e","preventDefault","response","post","withCredentials","data","success","token","err","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/arief/OneDrive/Documents/reactJS/sims_ppob-arief_febrian/src/pages/LoginPage.jsx"],"sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { AuthContext } from \"../contexts/AuthContext\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { baseUrl } from \"../api\";\r\n\r\nfunction LoginPage() {\r\n  const { login } = useContext(AuthContext);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const togglePassword = () => setShowPassword(!showPassword);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post(\r\n        `${baseUrl}login`,\r\n        { email, password },\r\n        { withCredentials: true }\r\n      );\r\n\r\n      if (response.data.success) {\r\n        login(response.data.token); // Simpan token ke context dan localStorage\r\n        navigate(\"/homePage\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"Login gagal. Periksa email atau password Anda.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Form login */}\r\n      {error && <div style={{ color: \"red\" }}>{error}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,WAAW,QAAQ,yBAAyB;AACrD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM;IAAEC;EAAM,CAAC,GAAGV,UAAU,CAACE,WAAW,CAAC;EACzC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMkB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9B,MAAMgB,cAAc,GAAGA,CAAA,KAAMJ,eAAe,CAAC,CAACD,YAAY,CAAC;EAE3D,MAAMM,QAAQ,GAAG,MAAOC,CAAC,IAAK;IAC5BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAC/B,GAAGpB,OAAO,OAAO,EACjB;QAAEM,KAAK;QAAEE;MAAS,CAAC,EACnB;QAAEa,eAAe,EAAE;MAAK,CAC1B,CAAC;MAED,IAAIF,QAAQ,CAACG,IAAI,CAACC,OAAO,EAAE;QACzBlB,KAAK,CAACc,QAAQ,CAACG,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC;QAC5BV,QAAQ,CAAC,WAAW,CAAC;MACvB;IACF,CAAC,CAAC,OAAOW,GAAG,EAAE;MACZZ,QAAQ,CAAC,gDAAgD,CAAC;IAC5D;EACF,CAAC;EAED,oBACEX,OAAA;IAAAwB,QAAA,EAEGd,KAAK,iBAAIV,OAAA;MAAKyB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAF,QAAA,EAAEd;IAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV;AAAC5B,EAAA,CAlCQD,SAAS;EAAA,QAMCJ,WAAW;AAAA;AAAAkC,EAAA,GANrB9B,SAAS;AAoClB,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
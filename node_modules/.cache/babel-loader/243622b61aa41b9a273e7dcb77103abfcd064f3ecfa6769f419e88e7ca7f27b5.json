{"ast":null,"code":"import axios from \"axios\";\nimport { baseUrl } from \"../../api\";\nimport { LOAD_PROFILE, UPDATE_PROFILE_IMAGE, LOGOUT, LOAD_PROFILE_SUCCESS, LOAD_PROFILE_FAILURE, UPDATE_PROFILE_IMAGE_SUCCESS, UPDATE_PROFILE_IMAGE_FAILURE, LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE } from \"./../types/actionTypes\";\nexport const loginUser = (email, password) => async dispatch => {\n  dispatch({\n    type: LOGIN\n  });\n  try {\n    const response = await axios.post(`${baseUrl}login`, {\n      email,\n      password\n    });\n    if (response.data.status === 0) {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: response.data.data\n      });\n    } else {\n      dispatch({\n        type: LOGIN_FAILURE,\n        error: response.data.message\n      });\n    }\n  } catch (error) {\n    var _error$response, _error$response$data;\n    const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Terjadi Kesalahan\";\n    dispatch({\n      type: LOGIN_FAILURE,\n      error: errorMessage\n    });\n  }\n};\nexport const loadProfileAction = token => async dispatch => {\n  dispatch({\n    type: LOAD_PROFILE\n  });\n  try {\n    const response = await axios.get(`${baseUrl}profile`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    dispatch({\n      type: LOAD_PROFILE_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: LOAD_PROFILE_FAILURE,\n      error: \"Failed to load profile data.\"\n    });\n  }\n};\nexport const updateProfileImageAction = (imageData, token) => async dispatch => {\n  dispatch({\n    type: UPDATE_PROFILE_IMAGE\n  });\n  try {\n    await axios.put(`${baseUrl}profile/image`, imageData, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    dispatch({\n      type: UPDATE_PROFILE_IMAGE_SUCCESS\n    });\n    dispatch(loadProfileAction(token));\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PROFILE_IMAGE_FAILURE,\n      error: \"Failed to update profile image.\"\n    });\n  }\n};\nexport const logoutAction = () => {\n  return {\n    type: LOGOUT\n  };\n};","map":{"version":3,"names":["axios","baseUrl","LOAD_PROFILE","UPDATE_PROFILE_IMAGE","LOGOUT","LOAD_PROFILE_SUCCESS","LOAD_PROFILE_FAILURE","UPDATE_PROFILE_IMAGE_SUCCESS","UPDATE_PROFILE_IMAGE_FAILURE","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","loginUser","email","password","dispatch","type","response","post","data","status","payload","error","message","_error$response","_error$response$data","errorMessage","loadProfileAction","token","get","headers","Authorization","updateProfileImageAction","imageData","put","logoutAction"],"sources":["C:/Users/arief/OneDrive/Documents/reactJS/sims_ppob-arief_febrian/src/redux/actions/authActions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { baseUrl } from \"../../api\";\r\nimport {\r\n     LOAD_PROFILE,\r\n     UPDATE_PROFILE_IMAGE,\r\n     LOGOUT,\r\n     LOAD_PROFILE_SUCCESS,\r\n     LOAD_PROFILE_FAILURE,\r\n     UPDATE_PROFILE_IMAGE_SUCCESS,\r\n     UPDATE_PROFILE_IMAGE_FAILURE,\r\n     LOGIN,\r\n     LOGIN_SUCCESS,\r\n     LOGIN_FAILURE\r\n} from \"./../types/actionTypes\";\r\n\r\nexport const loginUser = (email, password) => async (dispatch) => {\r\n     dispatch({ type: LOGIN });\r\n     try {\r\n         const response = await axios.post(`${baseUrl}login`, { email, password });\r\n \r\n         if (response.data.status === 0) {\r\n             dispatch({ type: LOGIN_SUCCESS, payload: response.data.data });\r\n         } else {\r\n             dispatch({ type: LOGIN_FAILURE, error: response.data.message });\r\n         }\r\n     } catch (error) {\r\n         const errorMessage = error.response?.data?.message || \"Terjadi Kesalahan\";\r\n         dispatch({ type: LOGIN_FAILURE, error: errorMessage });\r\n     }\r\n };\r\n\r\nexport const loadProfileAction = (token) => async (dispatch) => {\r\n     dispatch({ type: LOAD_PROFILE });\r\n     try {\r\n          const response = await axios.get(`${baseUrl}profile`, {\r\n               headers: { Authorization: `Bearer ${token}` },\r\n          });\r\n          dispatch({\r\n               type: LOAD_PROFILE_SUCCESS,\r\n               payload: response.data,\r\n          });\r\n     } catch (error) {\r\n          dispatch({\r\n               type: LOAD_PROFILE_FAILURE,\r\n               error: \"Failed to load profile data.\",\r\n          });\r\n     }\r\n};\r\n\r\nexport const updateProfileImageAction = (imageData, token) => async (dispatch) => {\r\n     dispatch({ type: UPDATE_PROFILE_IMAGE });\r\n     try {\r\n          await axios.put(`${baseUrl}profile/image`, imageData, {\r\n               headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n               },\r\n          });\r\n          dispatch({\r\n               type: UPDATE_PROFILE_IMAGE_SUCCESS,\r\n          });\r\n          dispatch(loadProfileAction(token));\r\n     } catch (error) {\r\n          dispatch({\r\n               type: UPDATE_PROFILE_IMAGE_FAILURE,\r\n               error: \"Failed to update profile image.\",\r\n          });\r\n     }\r\n};\r\n\r\nexport const logoutAction = () => {\r\n     return { type: LOGOUT };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// src/redux/actions/authActions.js\nimport axios from \"axios\";\nimport { baseUrl } from \"../../api\";\nimport { LOAD_PROFILE, UPDATE_PROFILE_IMAGE, LOGOUT, LOAD_PROFILE_SUCCESS, LOAD_PROFILE_FAILURE, UPDATE_PROFILE_IMAGE_SUCCESS, UPDATE_PROFILE_IMAGE_FAILURE } from \"../types/authActionTypes\";\n\n// Load profile action\nexport const loadProfileAction = token => async dispatch => {\n  dispatch({\n    type: LOAD_PROFILE\n  });\n  try {\n    const response = await axios.get(`${baseUrl}profile`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    dispatch({\n      type: LOAD_PROFILE_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: LOAD_PROFILE_FAILURE,\n      error: \"Failed to load profile data.\"\n    });\n  }\n};\n\n// Update profile image action\nexport const updateProfileImageAction = (imageData, token) => async dispatch => {\n  dispatch({\n    type: UPDATE_PROFILE_IMAGE\n  });\n  try {\n    await axios.put(`${baseUrl}profile/image`, imageData, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    dispatch({\n      type: UPDATE_PROFILE_IMAGE_SUCCESS\n    });\n    dispatch(loadProfileAction(token)); // Reload profile data after image update\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PROFILE_IMAGE_FAILURE,\n      error: \"Failed to update profile image.\"\n    });\n  }\n};\n\n// Logout action\nexport const logoutAction = () => {\n  return {\n    type: LOGOUT\n  };\n};","map":{"version":3,"names":["axios","baseUrl","LOAD_PROFILE","UPDATE_PROFILE_IMAGE","LOGOUT","LOAD_PROFILE_SUCCESS","LOAD_PROFILE_FAILURE","UPDATE_PROFILE_IMAGE_SUCCESS","UPDATE_PROFILE_IMAGE_FAILURE","loadProfileAction","token","dispatch","type","response","get","headers","Authorization","payload","data","error","updateProfileImageAction","imageData","put","logoutAction"],"sources":["C:/Users/arief/OneDrive/Documents/reactJS/sims_ppob-arief_febrian/src/redux/actions/authActions.js"],"sourcesContent":["// src/redux/actions/authActions.js\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../api\";\r\nimport {\r\n  LOAD_PROFILE,\r\n  UPDATE_PROFILE_IMAGE,\r\n  LOGOUT,\r\n  LOAD_PROFILE_SUCCESS,\r\n  LOAD_PROFILE_FAILURE,\r\n  UPDATE_PROFILE_IMAGE_SUCCESS,\r\n  UPDATE_PROFILE_IMAGE_FAILURE,\r\n} from \"../types/authActionTypes\";\r\n\r\n// Load profile action\r\nexport const loadProfileAction = (token) => async (dispatch) => {\r\n  dispatch({ type: LOAD_PROFILE });\r\n  try {\r\n    const response = await axios.get(`${baseUrl}profile`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    dispatch({\r\n      type: LOAD_PROFILE_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOAD_PROFILE_FAILURE,\r\n      error: \"Failed to load profile data.\",\r\n    });\r\n  }\r\n};\r\n\r\n// Update profile image action\r\nexport const updateProfileImageAction = (imageData, token) => async (dispatch) => {\r\n  dispatch({ type: UPDATE_PROFILE_IMAGE });\r\n  try {\r\n    await axios.put(`${baseUrl}profile/image`, imageData, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    });\r\n    dispatch({\r\n      type: UPDATE_PROFILE_IMAGE_SUCCESS,\r\n    });\r\n    dispatch(loadProfileAction(token)); // Reload profile data after image update\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_PROFILE_IMAGE_FAILURE,\r\n      error: \"Failed to update profile image.\",\r\n    });\r\n  }\r\n};\r\n\r\n// Logout action\r\nexport const logoutAction = () => {\r\n  return { type: LOGOUT };\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,WAAW;AACnC,SACEC,YAAY,EACZC,oBAAoB,EACpBC,MAAM,EACNC,oBAAoB,EACpBC,oBAAoB,EACpBC,4BAA4B,EAC5BC,4BAA4B,QACvB,0BAA0B;;AAEjC;AACA,OAAO,MAAMC,iBAAiB,GAAIC,KAAK,IAAK,MAAOC,QAAQ,IAAK;EAC9DA,QAAQ,CAAC;IAAEC,IAAI,EAAEV;EAAa,CAAC,CAAC;EAChC,IAAI;IACF,MAAMW,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,GAAGb,OAAO,SAAS,EAAE;MACpDc,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUN,KAAK;MAAG;IAC9C,CAAC,CAAC;IACFC,QAAQ,CAAC;MACPC,IAAI,EAAEP,oBAAoB;MAC1BY,OAAO,EAAEJ,QAAQ,CAACK;IACpB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdR,QAAQ,CAAC;MACPC,IAAI,EAAEN,oBAAoB;MAC1Ba,KAAK,EAAE;IACT,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,wBAAwB,GAAGA,CAACC,SAAS,EAAEX,KAAK,KAAK,MAAOC,QAAQ,IAAK;EAChFA,QAAQ,CAAC;IAAEC,IAAI,EAAET;EAAqB,CAAC,CAAC;EACxC,IAAI;IACF,MAAMH,KAAK,CAACsB,GAAG,CAAC,GAAGrB,OAAO,eAAe,EAAEoB,SAAS,EAAE;MACpDN,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUN,KAAK,EAAE;QAChC,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACFC,QAAQ,CAAC;MACPC,IAAI,EAAEL;IACR,CAAC,CAAC;IACFI,QAAQ,CAACF,iBAAiB,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACtC,CAAC,CAAC,OAAOS,KAAK,EAAE;IACdR,QAAQ,CAAC;MACPC,IAAI,EAAEJ,4BAA4B;MAClCW,KAAK,EAAE;IACT,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,YAAY,GAAGA,CAAA,KAAM;EAChC,OAAO;IAAEX,IAAI,EAAER;EAAO,CAAC;AACzB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import axios from \"axios\";\nimport { baseUrl } from \"../../\";\nexport const FETCH_SERVICES_START = 'FETCH_SERVICES_START';\nexport const FETCH_SERVICES_SUCCESS = 'FETCH_SERVICES_SUCCESS';\nexport const FETCH_SERVICES_ERROR = 'FETCH_SERVICES_ERROR';\nexport const fetchServices = token => async dispatch => {\n  dispatch({\n    type: FETCH_SERVICES_START\n  });\n  try {\n    const response = await axios.get(`${baseUrl}services`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    if (response.data.status === 0) {\n      dispatch({\n        type: FETCH_SERVICES_SUCCESS,\n        payload: response.data.data\n      });\n    }\n  } catch (error) {\n    var _error$response, _error$response$data;\n    dispatch({\n      type: FETCH_SERVICES_ERROR,\n      payload: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Terjadi kesalahan\"\n    });\n  }\n};","map":{"version":3,"names":["axios","baseUrl","FETCH_SERVICES_START","FETCH_SERVICES_SUCCESS","FETCH_SERVICES_ERROR","fetchServices","token","dispatch","type","response","get","headers","Authorization","data","status","payload","error","_error$response","_error$response$data","message"],"sources":["C:/Users/arief/OneDrive/Documents/reactJS/sims_ppob-arief_febrian/src/redux/actions/serviceActions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { baseUrl } from \"../../\";\r\n\r\nexport const FETCH_SERVICES_START = 'FETCH_SERVICES_START';\r\nexport const FETCH_SERVICES_SUCCESS = 'FETCH_SERVICES_SUCCESS';\r\nexport const FETCH_SERVICES_ERROR = 'FETCH_SERVICES_ERROR';\r\n\r\nexport const fetchServices = (token) => async (dispatch) => {\r\n     dispatch({ type: FETCH_SERVICES_START });\r\n     try {\r\n          const response = await axios.get(`${baseUrl}services`, {\r\n               headers: { Authorization: `Bearer ${token}` },\r\n          });\r\n          if (response.data.status === 0) {\r\n               dispatch({ type: FETCH_SERVICES_SUCCESS, payload: response.data.data });\r\n          }\r\n     } catch (error) {\r\n          dispatch({\r\n               type: FETCH_SERVICES_ERROR,\r\n               payload: error.response?.data?.message || \"Terjadi kesalahan\",\r\n          });\r\n     }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,QAAQ;AAEhC,OAAO,MAAMC,oBAAoB,GAAG,sBAAsB;AAC1D,OAAO,MAAMC,sBAAsB,GAAG,wBAAwB;AAC9D,OAAO,MAAMC,oBAAoB,GAAG,sBAAsB;AAE1D,OAAO,MAAMC,aAAa,GAAIC,KAAK,IAAK,MAAOC,QAAQ,IAAK;EACvDA,QAAQ,CAAC;IAAEC,IAAI,EAAEN;EAAqB,CAAC,CAAC;EACxC,IAAI;IACC,MAAMO,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,GAAGT,OAAO,UAAU,EAAE;MAClDU,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUN,KAAK;MAAG;IACjD,CAAC,CAAC;IACF,IAAIG,QAAQ,CAACI,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;MAC3BP,QAAQ,CAAC;QAAEC,IAAI,EAAEL,sBAAsB;QAAEY,OAAO,EAAEN,QAAQ,CAACI,IAAI,CAACA;MAAK,CAAC,CAAC;IAC5E;EACL,CAAC,CAAC,OAAOG,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACXX,QAAQ,CAAC;MACJC,IAAI,EAAEJ,oBAAoB;MAC1BW,OAAO,EAAE,EAAAE,eAAA,GAAAD,KAAK,CAACP,QAAQ,cAAAQ,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBJ,IAAI,cAAAK,oBAAA,uBAApBA,oBAAA,CAAsBC,OAAO,KAAI;IAC/C,CAAC,CAAC;EACP;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../api\";\nexport const loadData = createAsyncThunk(\"auth/loadData\", async (token, {\n  rejectWithValue\n}) => {\n  try {\n    const [balanceResponse, profileResponse] = await Promise.all([axios.get(`${baseUrl}balance`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }), axios.get(`${baseUrl}profile`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    })]);\n    return {\n      saldo: balanceResponse.data.status === 0 ? balanceResponse.data.data.balance : 0,\n      profile: profileResponse.data.status === 0 ? {\n        email: profileResponse.data.data.email,\n        namaDepan: profileResponse.data.data.first_name,\n        namaBelakang: profileResponse.data.data.last_name,\n        profilePicture: profileResponse.data.data.profile_image\n      } : {}\n    };\n  } catch (error) {\n    if (error.response && error.response.status === 401) {\n      return rejectWithValue(\"Unauthorized\");\n    }\n    return rejectWithValue(\"Failed to load data\");\n  }\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    token: localStorage.getItem(\"token\") || null,\n    saldo: 0,\n    profile: {\n      email: \"\",\n      namaDepan: \"\",\n      namaBelakang: \"\",\n      profilePicture: \"\"\n    }\n  },\n  reducers: {\n    login: (state, action) => {\n      state.token = action.payload;\n      localStorage.setItem(\"token\", action.payload);\n    },\n    logout: state => {\n      state.token = null;\n      state.saldo = 0;\n      state.profile = {\n        email: \"\",\n        namaDepan: \"\",\n        namaBelakang: \"\",\n        profilePicture: \"\"\n      };\n      localStorage.removeItem(\"token\");\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(loadData.fulfilled, (state, action) => {\n      state.saldo = action.payload.saldo;\n      state.profile = action.payload.profile;\n    }).addCase(loadData.rejected, (state, action) => {\n      if (action.payload === \"Unauthorized\") {\n        state.token = null;\n        localStorage.removeItem(\"token\");\n      }\n    });\n  }\n});\nexport const {\n  login,\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","baseUrl","loadData","token","rejectWithValue","balanceResponse","profileResponse","Promise","all","get","headers","Authorization","saldo","data","status","balance","profile","email","namaDepan","first_name","namaBelakang","last_name","profilePicture","profile_image","error","response","authSlice","name","initialState","localStorage","getItem","reducers","login","state","action","payload","setItem","logout","removeItem","extraReducers","builder","addCase","fulfilled","rejected","actions","reducer"],"sources":["C:/Users/arief/OneDrive/Documents/reactJS/sims_ppob-arief_febrian/src/redux/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../api\";\r\n\r\nexport const loadData = createAsyncThunk(\r\n  \"auth/loadData\",\r\n  async (token, { rejectWithValue }) => {\r\n    try {\r\n      const [balanceResponse, profileResponse] = await Promise.all([\r\n        axios.get(`${baseUrl}balance`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }),\r\n        axios.get(`${baseUrl}profile`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }),\r\n      ]);\r\n\r\n      return {\r\n        saldo: balanceResponse.data.status === 0 ? balanceResponse.data.data.balance : 0,\r\n        profile: profileResponse.data.status === 0 ? {\r\n          email: profileResponse.data.data.email,\r\n          namaDepan: profileResponse.data.data.first_name,\r\n          namaBelakang: profileResponse.data.data.last_name,\r\n          profilePicture: profileResponse.data.data.profile_image,\r\n        } : {},\r\n      };\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 401) {\r\n        return rejectWithValue(\"Unauthorized\");\r\n      }\r\n      return rejectWithValue(\"Failed to load data\");\r\n    }\r\n  }\r\n);\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: {\r\n    token: localStorage.getItem(\"token\") || null,\r\n    saldo: 0,\r\n    profile: {\r\n      email: \"\",\r\n      namaDepan: \"\",\r\n      namaBelakang: \"\",\r\n      profilePicture: \"\",\r\n    },\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.token = action.payload;\r\n      localStorage.setItem(\"token\", action.payload);\r\n    },\r\n    logout: (state) => {\r\n      state.token = null;\r\n      state.saldo = 0;\r\n      state.profile = {\r\n        email: \"\",\r\n        namaDepan: \"\",\r\n        namaBelakang: \"\",\r\n        profilePicture: \"\",\r\n      };\r\n      localStorage.removeItem(\"token\");\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(loadData.fulfilled, (state, action) => {\r\n        state.saldo = action.payload.saldo;\r\n        state.profile = action.payload.profile;\r\n      })\r\n      .addCase(loadData.rejected, (state, action) => {\r\n        if (action.payload === \"Unauthorized\") {\r\n          state.token = null;\r\n          localStorage.removeItem(\"token\");\r\n        }\r\n      });\r\n  },\r\n});\r\n\r\nexport const { login, logout } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}